//////////////////////////////////////////////////////////////////////
//Colors (d3-color)
//Color manipulation and color space conversion.
//////////////////////////////////////////////////////////////////////

{
	"scope": "source.js",
	"completions":
	[
		{
			//d3.color - parse the given CSS color specifier.
			"trigger": "color()\td3.color()",
			"contents": "d3.color(${1:specifier})"
		}, {
			"trigger": "opacity()\td3-color.opacity",
			"contents": "opacity = $1"
		}, {
			//color.rgb - compute the RGB equivalent of this color.
			"trigger": "rgb()\td3-color.rgb()",
			"contents": "rgb()"
		}, {
			//color.brighter - create a brighter copy of this color.
			"trigger": "brighter()\td3-color.brighter()",
			"contents": "brighter(${1:[k]})"
		}, {
			//color.darker - create a darker copy of this color.
			"trigger": "darker()\td3-color.darker()",
			"contents": "darker(${1:[k]})"
		}, {
			//color.displayable - returns true if the color is displayable on standard hardware.
			"trigger": "displayable()\td3-color.displayable()",
			"contents": "displayable()"
		}, {
			//color.toString - format the color as an RGB hexadecimal string.
			"trigger": "toString()\td3-color.toString()",
			"contents": "toString()"
		}, {
			//d3.rgb - create a new RGB color.
			"trigger": "rgb()\td3.rgb()",
			"contents": "d3.rgb(${1:specifier})"
		}, {
			//d3.hsl - create a new HSL color.
			"trigger": "hsl()\td3.hsl()",
			"contents": "d3.hsl(${1:specifier})"
		}, {
			//d3.lab - create a new Lab color.
			"trigger": "lab()\td3.lab()",
			"contents": "d3.lab(${1:specifier})"
		}, {
			//d3.hcl - create a new HCL color.
			"trigger": "hcl()\td3.hcl()",
			"contents": "d3.hcl(${1:specifier})"
		}, {
			//d3.cubehelix - create a new Cubehelix color.
			"trigger": "cubehelix()\td3.cubehelix()",
			"contents": "d3.cubehelix(${1:specifier})"
		}
	]
}